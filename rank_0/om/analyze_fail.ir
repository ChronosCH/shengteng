# ===============================================================================================
# The following shows the last analyze fail log message.
# ===============================================================================================

----------------------------------------------------
- Caught exception:
----------------------------------------------------
TupleGetItem evaluator index should be in range[-3, 3), but got 3.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
kins/agent-working-dir/workspace/executor0/mindspore/mindspore/ops/infer//sequence_getitem.cc:99 mindspore::ops::SequenceGetItemInnerInfer

----------------------------------------------------
- The Traceback of Net Construct Code:
----------------------------------------------------
# 0 In file D:\shengteng\training\tfnet_model.py:102~118, 8~34
        for i in range(int(batch)):
        ^
# 1 In file D:\shengteng\training\tfnet_model.py:80, 8~60
        batch, temp, channel, height, width = seq_data.shape
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# ===============================================================================================
# The following shows the IR when the function graphs evaluation fails to help locate the problem.
# You can search the last ------------------------> to the node which is evaluated failure.
# Refer to https://www.mindspore.cn/search?inputValue=analyze_fail.ir to get more instructions.
# ===============================================================================================

# IR entry: @training_tfnet_model_TFNetModel_construct_24
# Total subgraphs: 0

# Attrs:
training: 0

# Total params: 1
# Params:
%para1_seq_data: <null>

subgraph attr:
training: 0
subgraph instance: training_tfnet_model_TFNetModel_construct_24 : 000001AED5E20E30
# In file D:\shengteng\training\tfnet_model.py:76~186, 4~103/    def construct(self, seq_data, data_len=None, is_train=True):/
subgraph @training_tfnet_model_TFNetModel_construct_24() {
  %0(CNode_32) = resolve(NameSpace[Entry: 'training.tfnet_model.TFNetModel.construct'], training.tfnet_model.TFNetModel.construct)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)

#------------------------> 0
  %1(CNode_33) = %0(%para1_seq_data, None, Bool(1))
      : (<Tensor[Float32], (1, 64, 37632)>, <None, NoShape>, <Bool, NoShape>) -> (<null>)
      #scope: (Default)
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:81~89, 8~49/        if len_x is None:/
}
# Order:
#   1: @training_tfnet_model_TFNetModel_construct_24:CNode_32{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> Entry: 'training.tfnet_model.TFNetModel.construct', [2]: ValueNode<Symbol> training.tfnet_model.TFNetModel.construct}
#   2: @training_tfnet_model_TFNetModel_construct_24:CNode_33{[0]: CNode_32, [1]: param_seq_data, [2]: ValueNode<None> None, [3]: ValueNode<BoolImm> true}
#   3: @training_tfnet_model_TFNetModel_construct_24:CNode_34{[0]: ValueNode<Primitive> Return, [1]: CNode_33}


subgraph attr:
training: 0
subgraph instance: training_tfnet_model_TFNetModel_construct_25 : 000001AED66B38C0
# In file D:\shengteng\training\tfnet_model.py:76~186, 4~103/    def construct(self, seq_data, data_len=None, is_train=True):/
subgraph @training_tfnet_model_TFNetModel_construct_25(%para0_seq_data, %para0_len_x, %para0_is_train) {
  %0(CNode_35) = resolve(NameSpace[Ast: 'Namespace:mindspore._extends.parse.trope'], is_)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:81, 11~24/        if len_x is None:/
  %1(CNode_36) = %0(%para0_len_x, None)
      : (<None, NoShape>, <None, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:81, 11~24/        if len_x is None:/
  %2(CNode_37) = Cond(%1, Bool(0))
      : (<Bool, NoShape>, <Bool, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:81~89, 8~49/        if len_x is None:/
  %3(CNode_38) = Switch(%2, @training_tfnet_model_TFNetModel_construct_39, @training_tfnet_model_TFNetModel_construct_40)
      : (<Bool, NoShape>, <Func, NoShape>, <Func, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:81~89, 8~49/        if len_x is None:/
  %4(CNode_41) = %3()
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:81~89, 8~49/        if len_x is None:/

#------------------------> 1
  %5(CNode_42) = call @training_tfnet_model_TFNetModel_construct_26(%4)
      : (<List[Int64], ListShape[NoShape]>) -> (<null>)
      #scope: (Default)
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:81~89, 8~49/        if len_x is None:/
}
# Order:
#   1: @training_tfnet_model_TFNetModel_construct_25:CNode_43{[0]: ValueNode<Primitive> getattr, [1]: param_seq_data, [2]: ValueNode<StringImm> shape}
#   2: @training_tfnet_model_TFNetModel_construct_25:CNode_44{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> getitem}
#   3: @training_tfnet_model_TFNetModel_construct_25:batch{[0]: CNode_44, [1]: CNode_43, [2]: ValueNode<Int64Imm> 0}
#   4: @training_tfnet_model_TFNetModel_construct_25:temp{[0]: CNode_44, [1]: CNode_43, [2]: ValueNode<Int64Imm> 1}
#   5: @training_tfnet_model_TFNetModel_construct_25:channel{[0]: CNode_44, [1]: CNode_43, [2]: ValueNode<Int64Imm> 2}
#   6: @training_tfnet_model_TFNetModel_construct_25:height{[0]: CNode_44, [1]: CNode_43, [2]: ValueNode<Int64Imm> 3}
#   7: @training_tfnet_model_TFNetModel_construct_25:width{[0]: CNode_44, [1]: CNode_43, [2]: ValueNode<Int64Imm> 4}
#   8: @training_tfnet_model_TFNetModel_construct_25:CNode_35{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> Ast: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> is_}
#   9: @training_tfnet_model_TFNetModel_construct_25:CNode_36{[0]: CNode_35, [1]: param_len_x, [2]: ValueNode<None> None}
#  10: @training_tfnet_model_TFNetModel_construct_25:CNode_37{[0]: ValueNode<Primitive> Cond, [1]: CNode_36, [2]: ValueNode<BoolImm> false}
#  11: @training_tfnet_model_TFNetModel_construct_25:CNode_45{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:training.tfnet_model', [2]: ValueNode<Symbol> int}
#  12: @training_tfnet_model_TFNetModel_construct_25:CNode_46{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:training.tfnet_model', [2]: ValueNode<Symbol> isinstance}
#  13: @training_tfnet_model_TFNetModel_construct_25:CNode_47{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:training.tfnet_model', [2]: ValueNode<Symbol> list}
#  14: @training_tfnet_model_TFNetModel_construct_25:CNode_48{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:training.tfnet_model', [2]: ValueNode<Symbol> tuple}
#  15: @training_tfnet_model_TFNetModel_construct_25:CNode_49{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:training.tfnet_model', [2]: ValueNode<Symbol> np}
#  16: @training_tfnet_model_TFNetModel_construct_25:CNode_38{[0]: ValueNode<Primitive> Switch, [1]: CNode_37, [2]: ValueNode<FuncGraph> training_tfnet_model_TFNetModel_construct_39, [3]: ValueNode<FuncGraph> training_tfnet_model_TFNetModel_construct_40}
#  17: @training_tfnet_model_TFNetModel_construct_25:CNode_41{[0]: CNode_38}
#  18: @training_tfnet_model_TFNetModel_construct_25:CNode_42{[0]: ValueNode<FuncGraph> training_tfnet_model_TFNetModel_construct_26, [1]: CNode_41}
#  19: @training_tfnet_model_TFNetModel_construct_25:CNode_50{[0]: ValueNode<Primitive> Return, [1]: CNode_42}
#  20: @training_tfnet_model_TFNetModel_construct_25:CNode_51{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:training.tfnet_model', [2]: ValueNode<Symbol> len}
#  21: @training_tfnet_model_TFNetModel_construct_25:CNode_52{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:training.tfnet_model', [2]: ValueNode<Symbol> range}
#  22: @training_tfnet_model_TFNetModel_construct_25:CNode_53{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:training.tfnet_model', [2]: ValueNode<Symbol> min}
#  23: @training_tfnet_model_TFNetModel_construct_25:CNode_54{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:training.tfnet_model', [2]: ValueNode<Symbol> ops}
#  24: @training_tfnet_model_TFNetModel_construct_25:CNode_55{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:training.tfnet_model', [2]: ValueNode<Symbol> max}
#  25: @training_tfnet_model_TFNetModel_construct_25:CNode_56{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> ClassMember: 'Namespace:training.tfnet_model..<TFNetModel::1850633905424>', [2]: ValueNode<Symbol> pad_sequence}


subgraph attr:
training: 0
after_block: 1
subgraph instance: training_tfnet_model_TFNetModel_construct_26 : 000001AED66B3E50
# In file D:\shengteng\training\tfnet_model.py:76~186, 4~103/    def construct(self, seq_data, data_len=None, is_train=True):/
subgraph @training_tfnet_model_TFNetModel_construct_26 parent: [subgraph @training_tfnet_model_TFNetModel_construct_25](%para0_phi_len_x_list) {
  %0(CNode_57) = resolve(NameSpace[Ast: 'Namespace:mindspore._extends.parse.trope'], lt)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:91, 11~39/        if len(len_x_list) < int(batch):/
  %1(CNode_51) = resolve(NameSpace[SymbolStr: 'Namespace:training.tfnet_model'], len)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:91, 11~14/        if len(len_x_list) < int(batch):/
  %2(CNode_58) = %1(%para0_phi_len_x_list)
      : (<List[Int64], ListShape[NoShape]>) -> (<Int64, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:91, 11~26/        if len(len_x_list) < int(batch):/
  %3(CNode_45) = resolve(NameSpace[SymbolStr: 'Namespace:training.tfnet_model'], int)
      : (<External, NoShape>, <External, NoShape>) -> (<TypeType, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:82, 26~29/            len_x_list = [int(temp)] * int(batch)/
  %4(CNode_44) = resolve(NameSpace[CommonOPS: 'Namespace:mindspore._extends.parse.trope'], getitem)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:80, 8~60/        batch, temp, channel, height, width = seq_data.shape/
  %5(CNode_43) = getattr(%para0_seq_data, "shape")
      : (<Tensor[Float32], (1, 64, 37632)>, <String, NoShape>) -> (<Tuple[Int64*3], TupleShape(NoShape, NoShape, NoShape)>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:80, 46~60/        batch, temp, channel, height, width = seq_data.shape/
  %6(batch) = %4(%5, I64(0))
      : (<Tuple[Int64*3], TupleShape(NoShape, NoShape, NoShape)>, <Int64, NoShape>) -> (<Int64, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:80, 8~60/        batch, temp, channel, height, width = seq_data.shape/
  %7(CNode_59) = %3(%6)
      : (<Int64, NoShape>) -> (<Int64, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:91, 29~39/        if len(len_x_list) < int(batch):/
  %8(CNode_60) = %0(%2, %7)
      : (<Int64, NoShape>, <Int64, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:91, 11~39/        if len(len_x_list) < int(batch):/
  %9(CNode_61) = Cond(%8, Bool(0))
      : (<Bool, NoShape>, <Bool, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:91~94, 8~48/        if len(len_x_list) < int(batch):/
  %10(CNode_62) = Switch(%9, @training_tfnet_model_TFNetModel_construct_63, @training_tfnet_model_TFNetModel_construct_64)
      : (<Bool, NoShape>, <Func, NoShape>, <Func, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:91~94, 8~48/        if len(len_x_list) < int(batch):/
  %11(CNode_65) = %10()
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:91~94, 8~48/        if len(len_x_list) < int(batch):/

#------------------------> 2
  %12(CNode_66) = call @training_tfnet_model_TFNetModel_construct_27(%11)
      : (<List[Int64], ListShape[NoShape]>) -> (<null>)
      #scope: (Default)
  Return(%12)
      : (<null>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:91~94, 8~48/        if len(len_x_list) < int(batch):/
}
# Order:
#   1: @training_tfnet_model_TFNetModel_construct_67:CNode_68{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> MakeTuple}
#   2: @training_tfnet_model_TFNetModel_construct_26:CNode_58{[0]: CNode_51, [1]: param_phi_len_x_list}
#   3: @training_tfnet_model_TFNetModel_construct_67:CNode_69{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> MakeTuple}
#   4: @training_tfnet_model_TFNetModel_construct_26:CNode_59{[0]: CNode_45, [1]: batch}
#   5: @training_tfnet_model_TFNetModel_construct_26:CNode_57{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> Ast: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> lt}
#   6: @training_tfnet_model_TFNetModel_construct_26:CNode_60{[0]: CNode_57, [1]: CNode_58, [2]: CNode_59}
#   7: @training_tfnet_model_TFNetModel_construct_26:CNode_61{[0]: ValueNode<Primitive> Cond, [1]: CNode_60, [2]: ValueNode<BoolImm> false}
#   8: @training_tfnet_model_TFNetModel_construct_26:CNode_62{[0]: ValueNode<Primitive> Switch, [1]: CNode_61, [2]: ValueNode<FuncGraph> training_tfnet_model_TFNetModel_construct_63, [3]: ValueNode<FuncGraph> training_tfnet_model_TFNetModel_construct_64}
#   9: @training_tfnet_model_TFNetModel_construct_26:CNode_65{[0]: CNode_62}
#  10: @training_tfnet_model_TFNetModel_construct_26:CNode_66{[0]: ValueNode<FuncGraph> training_tfnet_model_TFNetModel_construct_27, [1]: CNode_65}
#  11: @training_tfnet_model_TFNetModel_construct_26:CNode_70{[0]: ValueNode<Primitive> Return, [1]: CNode_66}


subgraph attr:
training: 0
after_block: 1
subgraph instance: training_tfnet_model_TFNetModel_construct_27 : 000001AED66B6540
# In file D:\shengteng\training\tfnet_model.py:76~186, 4~103/    def construct(self, seq_data, data_len=None, is_train=True):/
subgraph @training_tfnet_model_TFNetModel_construct_27 parent: [subgraph @training_tfnet_model_TFNetModel_construct_25](%para0_phi_len_x_list) {

#------------------------> 3
  %0(CNode_71) = call @training_tfnet_model_TFNetModel_construct_28(I64(0), I64(0), [])
      : (<Int64, NoShape>, <Int64, NoShape>, <List[], ListShape[]>) -> (<null>)
      #scope: (Default)
  Return(%0)
      : (<null>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:102~118, 8~34/        for i in range(int(batch)):/
}
# Order:
#   1: @training_tfnet_model_TFNetModel_construct_27:CNode_72{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> ClassMember: 'Namespace:training.tfnet_model..<TFNetModel::1850633905424>', [2]: ValueNode<Symbol> reshape}
#   2: @training_tfnet_model_TFNetModel_construct_27:CNode_73{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> MakeTuple}
#   3: @training_tfnet_model_TFNetModel_construct_27:CNode_74{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> Ast: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> mul}
#   4: @training_tfnet_model_TFNetModel_construct_27:CNode_75{[0]: CNode_74, [1]: batch, [2]: temp}
#   5: @training_tfnet_model_TFNetModel_construct_27:CNode_76{[0]: CNode_73, [1]: CNode_75, [2]: channel, [3]: height, [4]: width}
#   6: @training_tfnet_model_TFNetModel_construct_77:CNode_78{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> MakeTuple}
#   7: @training_tfnet_model_TFNetModel_construct_27:inputs{[0]: CNode_72, [1]: param_seq_data, [2]: CNode_76}
#   8: @training_tfnet_model_TFNetModel_construct_27:CNode_79{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> len}
#   9: @training_tfnet_model_TFNetModel_construct_27:CNode_80{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> getitem}
#  10: @training_tfnet_model_TFNetModel_construct_27:CNode_81{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> iter}
#  11: @training_tfnet_model_TFNetModel_construct_77:CNode_82{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> MakeTuple}
#  12: @training_tfnet_model_TFNetModel_construct_27:CNode_83{[0]: CNode_45, [1]: batch}
#  13: @training_tfnet_model_TFNetModel_construct_77:CNode_84{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> MakeTuple}
#  14: @training_tfnet_model_TFNetModel_construct_27:CNode_85{[0]: CNode_52, [1]: CNode_83}
#  15: @training_tfnet_model_TFNetModel_construct_27:CNode_86{[0]: CNode_81, [1]: CNode_85}
#  16: @training_tfnet_model_TFNetModel_construct_27:CNode_87{[0]: CNode_79, [1]: CNode_86}
#  17: @training_tfnet_model_TFNetModel_construct_77:CNode_88{[0]: ValueNode<FuncGraph> training_tfnet_model_TFNetModel_construct_89, [1]: ValueNode<Int64Imm> 0, [2]: CNode_90, [3]: CNode_91, [4]: param_phi_len_x_list, [5]: temp, [6]: ValueNode<Int64Imm> 0, [7]: inputs, [8]: ValueNode<ValueList> [], [9]: CNode_92, [10]: CNode_93, [11]: CNode_94, [12]: param_is_train, [13]: batch, [14]: CNode_95}
#  18: @training_tfnet_model_TFNetModel_construct_27:CNode_96{[0]: ValueNode<Primitive> Return, [1]: CNode_71}
#  19: @training_tfnet_model_TFNetModel_construct_27:CNode_71{[0]: ValueNode<FuncGraph> training_tfnet_model_TFNetModel_construct_28, [1]: ValueNode<Int64Imm> 0, [2]: ValueNode<Int64Imm> 0, [3]: ValueNode<ValueList> []}


subgraph attr:
training: 0
subgraph instance: training_tfnet_model_TFNetModel_construct_28 : 000001AED66B6AD0
# In file D:\shengteng\training\tfnet_model.py:76~186, 4~103/    def construct(self, seq_data, data_len=None, is_train=True):/
subgraph @training_tfnet_model_TFNetModel_construct_28 parent: [subgraph @training_tfnet_model_TFNetModel_construct_27](%para0_@CNode_29, %para0_phi_start_idx, %para0_phi_feature_list) {
  %0(CNode_79) = resolve(NameSpace[CommonOPS: 'Namespace:mindspore._extends.parse.trope'], len)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:102~118, 8~34/        for i in range(int(batch)):/
  %1(CNode_81) = resolve(NameSpace[CommonOPS: 'Namespace:mindspore._extends.parse.trope'], iter)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:102~118, 8~34/        for i in range(int(batch)):/
  %2(CNode_52) = resolve(NameSpace[SymbolStr: 'Namespace:training.tfnet_model'], range)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:102, 17~22/        for i in range(int(batch)):/
  %3(CNode_45) = resolve(NameSpace[SymbolStr: 'Namespace:training.tfnet_model'], int)
      : (<External, NoShape>, <External, NoShape>) -> (<TypeType, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:82, 26~29/            len_x_list = [int(temp)] * int(batch)/
  %4(CNode_44) = resolve(NameSpace[CommonOPS: 'Namespace:mindspore._extends.parse.trope'], getitem)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:80, 8~60/        batch, temp, channel, height, width = seq_data.shape/
  %5(CNode_43) = getattr(%para0_seq_data, "shape")
      : (<Tensor[Float32], (1, 64, 37632)>, <String, NoShape>) -> (<Tuple[Int64*3], TupleShape(NoShape, NoShape, NoShape)>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:80, 46~60/        batch, temp, channel, height, width = seq_data.shape/
  %6(batch) = %4(%5, I64(0))
      : (<Tuple[Int64*3], TupleShape(NoShape, NoShape, NoShape)>, <Int64, NoShape>) -> (<Int64, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:80, 8~60/        batch, temp, channel, height, width = seq_data.shape/
  %7(CNode_83) = %3(%6)
      : (<Int64, NoShape>) -> (<Int64, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:102, 23~33/        for i in range(int(batch)):/
  %8(CNode_85) = %2(%7)
      : (<Int64, NoShape>) -> (<Tuple[Int64], TupleShape(NoShape)>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:102, 17~34/        for i in range(int(batch)):/
  %9(CNode_86) = %1(%8)
      : (<Tuple[Int64], TupleShape(NoShape)>) -> (<Tuple[Int64], TupleShape(NoShape)>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:102~118, 8~34/        for i in range(int(batch)):/
  %10(CNode_87) = %0(%9)
      : (<Tuple[Int64], TupleShape(NoShape)>) -> (<Int64, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:102~118, 8~34/        for i in range(int(batch)):/
  %11(CNode_97) = MultitypeFuncGraph_less{(Number, Number), (String, String), (Tuple, Tuple), (Tensor, Tensor), (Number, Tensor), (Tensor, Number), (List, List)}(%para0_@CNode_29, %10)
      : (<Int64, NoShape>, <Int64, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:102~118, 8~34/        for i in range(int(batch)):/
  %12(CNode_98) = Switch(%11, @training_tfnet_model_TFNetModel_construct_30, @training_tfnet_model_TFNetModel_construct_99)
      : (<Bool, NoShape>, <Func, NoShape>, <Func, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:102~118, 8~34/        for i in range(int(batch)):/

#------------------------> 4
  %13(CNode_100) = %12()
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:102~118, 8~34/        for i in range(int(batch)):/
  Return(%13)
      : (<null>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:102~118, 8~34/        for i in range(int(batch)):/
}
# Order:
#   1: @training_tfnet_model_TFNetModel_construct_28:CNode_97{[0]: ValueNode<MultitypeFuncGraph> MetaFuncGraph-less.12, [1]: param_@CNode_29, [2]: CNode_87}
#   2: @training_tfnet_model_TFNetModel_construct_28:CNode_98{[0]: ValueNode<Primitive> Switch, [1]: CNode_97, [2]: ValueNode<FuncGraph> training_tfnet_model_TFNetModel_construct_30, [3]: ValueNode<FuncGraph> training_tfnet_model_TFNetModel_construct_99}
#   3: @training_tfnet_model_TFNetModel_construct_28:CNode_100{[0]: CNode_98}
#   4: @training_tfnet_model_TFNetModel_construct_28:CNode_101{[0]: ValueNode<Primitive> Return, [1]: CNode_100}


subgraph attr:
training: 0
subgraph instance: training_tfnet_model_TFNetModel_construct_30 : 000001AE80123F10
# In file D:\shengteng\training\tfnet_model.py:76~186, 4~103/    def construct(self, seq_data, data_len=None, is_train=True):/
subgraph @training_tfnet_model_TFNetModel_construct_30 parent: [subgraph @training_tfnet_model_TFNetModel_construct_28]() {
  %0(CNode_102) = MultitypeFuncGraph_add{(Number, Number), (String, String), (Tensor, Tuple), (Number, Tensor), (Tensor, Number), (List, Tensor), (Tuple, Tensor), (NoneType, NoneType), (Tensor, List), (List, List), (Tensor, Tensor), (RowTensor, Tensor), (COOTensor, COOTensor), (Tuple, Tuple), (CSRTensor, CSRTensor), (COOTensor, Tensor), (Tensor, COOTensor), (Dictionary, Dictionary)}($(@training_tfnet_model_TFNetModel_construct_28:para0_@CNode_29), I64(1))
      : (<null>, <Int64, NoShape>) -> (<null>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:102~118, 8~34/        for i in range(int(batch)):/
  %1(CNode_103) = StopGradient(%0)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:76~186, 4~103/    def construct(self, seq_data, data_len=None, is_train=True):/
  %2(CNode_104) = resolve(NameSpace[Ast: 'Namespace:mindspore._extends.parse.trope'], lt)
      : (<External, NoShape>, <External, NoShape>) -> (<null>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:108, 15~42/            if start_idx < inputs.shape[0] and start_idx < end_idx:/
  %3(CNode_105) = resolve(NameSpace[CommonOPS: 'Namespace:mindspore._extends.parse.trope'], getitem)
      : (<External, NoShape>, <External, NoShape>) -> (<null>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:108, 27~42/            if start_idx < inputs.shape[0] and start_idx < end_idx:/
  %4(CNode_72) = resolve(NameSpace[ClassMember: 'Namespace:training.tfnet_model..<TFNetModel::1850633905424>'], reshape)
      : (<External, NoShape>, <External, NoShape>) -> (<null>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:97, 17~29/        inputs = self.reshape(seq_data, (batch * temp, channel, height, width))/
  %5(CNode_73) = resolve(NameSpace[CommonOPS: 'Namespace:mindspore._extends.parse.trope'], MakeTuple)
      : (<External, NoShape>, <External, NoShape>) -> (<null>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:97, 40~78/        inputs = self.reshape(seq_data, (batch * temp, channel, height, width))/
  %6(CNode_74) = resolve(NameSpace[Ast: 'Namespace:mindspore._extends.parse.trope'], mul)
      : (<External, NoShape>, <External, NoShape>) -> (<null>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:97, 41~53/        inputs = self.reshape(seq_data, (batch * temp, channel, height, width))/
  %7(CNode_44) = resolve(NameSpace[CommonOPS: 'Namespace:mindspore._extends.parse.trope'], getitem)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:80, 8~60/        batch, temp, channel, height, width = seq_data.shape/
  %8(CNode_43) = getattr(%para0_seq_data, "shape")
      : (<Tensor[Float32], (1, 64, 37632)>, <String, NoShape>) -> (<Tuple[Int64*3], TupleShape(NoShape, NoShape, NoShape)>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:80, 46~60/        batch, temp, channel, height, width = seq_data.shape/
  %9(batch) = %7(%8, I64(0))
      : (<Tuple[Int64*3], TupleShape(NoShape, NoShape, NoShape)>, <Int64, NoShape>) -> (<Int64, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:80, 8~60/        batch, temp, channel, height, width = seq_data.shape/
  %10(temp) = %7(%8, I64(1))
      : (<Tuple[Int64*3], TupleShape(NoShape, NoShape, NoShape)>, <Int64, NoShape>) -> (<Int64, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:80, 8~60/        batch, temp, channel, height, width = seq_data.shape/
  %11(CNode_75) = %6(%9, %10)
      : (<Int64, NoShape>, <Int64, NoShape>) -> (<null>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:97, 41~53/        inputs = self.reshape(seq_data, (batch * temp, channel, height, width))/
  %12(channel) = %7(%8, I64(2))
      : (<Tuple[Int64*3], TupleShape(NoShape, NoShape, NoShape)>, <Int64, NoShape>) -> (<Int64, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:80, 8~60/        batch, temp, channel, height, width = seq_data.shape/

#------------------------> 5
  %13(height) = %7(%8, I64(3))
      : (<Tuple[Int64*3], TupleShape(NoShape, NoShape, NoShape)>, <Int64, NoShape>) -> (<null>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:80, 8~60/        batch, temp, channel, height, width = seq_data.shape/
  %14(width) = %7(%8, I64(4))
      : (<Tuple[Int64*3], TupleShape(NoShape, NoShape, NoShape)>, <null>) -> (<null>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:80, 8~60/        batch, temp, channel, height, width = seq_data.shape/
  %15(CNode_76) = %5(%11, %12, %13, %14)
      : (<null>, <Int64, NoShape>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:97, 40~78/        inputs = self.reshape(seq_data, (batch * temp, channel, height, width))/
  %16(inputs) = %4($(@training_tfnet_model_TFNetModel_construct_25:para0_seq_data), %15)
      : (<Tensor[Float32], (1, 64, 37632)>, <null>) -> (<null>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:97, 17~79/        inputs = self.reshape(seq_data, (batch * temp, channel, height, width))/
  %17(CNode_106) = getattr(%16, "shape")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:108, 27~39/            if start_idx < inputs.shape[0] and start_idx < end_idx:/
  %18(CNode_107) = %3(%17, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:108, 27~42/            if start_idx < inputs.shape[0] and start_idx < end_idx:/
  %19(CNode_108) = %2($(@training_tfnet_model_TFNetModel_construct_28:para0_phi_start_idx), %18)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:108, 15~42/            if start_idx < inputs.shape[0] and start_idx < end_idx:/
  %20(CNode_109) = Cond(%19, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:108, 47~66/            if start_idx < inputs.shape[0] and start_idx < end_idx:/
  %21(CNode_110) = Switch(%20, @training_tfnet_model_TFNetModel_construct_111, @training_tfnet_model_TFNetModel_construct_112)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:108, 47~66/            if start_idx < inputs.shape[0] and start_idx < end_idx:/
  %22(CNode_113) = %21()
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:108, 47~66/            if start_idx < inputs.shape[0] and start_idx < end_idx:/
  %23(CNode_114) = Cond(%22, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:108~117, 12~50/            if start_idx < inputs.shape[0] and start_idx < end_idx:/
  %24(CNode_115) = Switch(%23, @training_tfnet_model_TFNetModel_construct_116, @training_tfnet_model_TFNetModel_construct_117)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:108~117, 12~50/            if start_idx < inputs.shape[0] and start_idx < end_idx:/
  %25(CNode_118) = %24()
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:108~117, 12~50/            if start_idx < inputs.shape[0] and start_idx < end_idx:/
  %26(CNode_119) = call @training_tfnet_model_TFNetModel_construct_120(%25)
      : (<null>) -> (<null>)
      #scope: (Default)
  %27(CNode_121) = Depend(%26, %1) primitive_attrs: {side_effect_propagate: I64(1)} cnode_attrs: {topo_sort_rhs_first: Bool(1)}
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
  Return(%27)
      : (<null>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:108~117, 12~50/            if start_idx < inputs.shape[0] and start_idx < end_idx:/
}
# Order:
#   1: @training_tfnet_model_TFNetModel_construct_30:i{[0]: CNode_80, [1]: CNode_86, [2]: param_@CNode_29}
#   2: @training_tfnet_model_TFNetModel_construct_30:CNode_102{[0]: ValueNode<MultitypeFuncGraph> MetaFuncGraph-add.13, [1]: param_@CNode_29, [2]: ValueNode<Int64Imm> 1}
#   3: @training_tfnet_model_TFNetModel_construct_30:CNode_122{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> getitem}
#   4: @training_tfnet_model_TFNetModel_construct_30:CNode_123{[0]: CNode_122, [1]: param_phi_len_x_list, [2]: i}
#   5: @training_tfnet_model_TFNetModel_construct_124:CNode_125{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> MakeTuple}
#   6: @training_tfnet_model_TFNetModel_construct_30:CNode_126{[0]: CNode_45, [1]: CNode_123}
#   7: @training_tfnet_model_TFNetModel_construct_124:CNode_127{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> MakeTuple}
#   8: @training_tfnet_model_TFNetModel_construct_30:CNode_128{[0]: CNode_45, [1]: temp}
#   9: @training_tfnet_model_TFNetModel_construct_124:CNode_129{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> MakeTuple}
#  10: @training_tfnet_model_TFNetModel_construct_30:lgt_i{[0]: CNode_53, [1]: CNode_126, [2]: CNode_128}
#  11: @training_tfnet_model_TFNetModel_construct_30:CNode_130{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> Ast: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> add}
#  12: @training_tfnet_model_TFNetModel_construct_30:end_idx{[0]: CNode_130, [1]: param_phi_start_idx, [2]: lgt_i}
#  13: @training_tfnet_model_TFNetModel_construct_30:CNode_131{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> getitem}
#  14: @training_tfnet_model_TFNetModel_construct_30:CNode_132{[0]: ValueNode<Primitive> getattr, [1]: inputs, [2]: ValueNode<StringImm> shape}
#  15: @training_tfnet_model_TFNetModel_construct_30:CNode_133{[0]: CNode_131, [1]: CNode_132, [2]: ValueNode<Int64Imm> 0}
#  16: @training_tfnet_model_TFNetModel_construct_124:CNode_134{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> MakeTuple}
#  17: @training_tfnet_model_TFNetModel_construct_30:end_idx{[0]: CNode_53, [1]: end_idx, [2]: CNode_133}
#  18: @training_tfnet_model_TFNetModel_construct_30:CNode_105{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> getitem}
#  19: @training_tfnet_model_TFNetModel_construct_30:CNode_106{[0]: ValueNode<Primitive> getattr, [1]: inputs, [2]: ValueNode<StringImm> shape}
#  20: @training_tfnet_model_TFNetModel_construct_30:CNode_107{[0]: CNode_105, [1]: CNode_106, [2]: ValueNode<Int64Imm> 0}
#  21: @training_tfnet_model_TFNetModel_construct_30:CNode_104{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> Ast: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> lt}
#  22: @training_tfnet_model_TFNetModel_construct_30:CNode_108{[0]: CNode_104, [1]: param_phi_start_idx, [2]: CNode_107}
#  23: @training_tfnet_model_TFNetModel_construct_30:CNode_109{[0]: ValueNode<Primitive> Cond, [1]: CNode_108, [2]: ValueNode<BoolImm> false}
#  24: @training_tfnet_model_TFNetModel_construct_30:CNode_110{[0]: ValueNode<Primitive> Switch, [1]: CNode_109, [2]: ValueNode<FuncGraph> training_tfnet_model_TFNetModel_construct_111, [3]: ValueNode<FuncGraph> training_tfnet_model_TFNetModel_construct_112}
#  25: @training_tfnet_model_TFNetModel_construct_30:CNode_113{[0]: CNode_110}
#  26: @training_tfnet_model_TFNetModel_construct_30:CNode_114{[0]: ValueNode<Primitive> Cond, [1]: CNode_113, [2]: ValueNode<BoolImm> false}
#  27: @training_tfnet_model_TFNetModel_construct_30:CNode_115{[0]: ValueNode<Primitive> Switch, [1]: CNode_114, [2]: ValueNode<FuncGraph> training_tfnet_model_TFNetModel_construct_116, [3]: ValueNode<FuncGraph> training_tfnet_model_TFNetModel_construct_117}
#  28: @training_tfnet_model_TFNetModel_construct_30:CNode_118{[0]: CNode_115}
#  29: @training_tfnet_model_TFNetModel_construct_30:CNode_119{[0]: ValueNode<FuncGraph> training_tfnet_model_TFNetModel_construct_120, [1]: CNode_118}
#  30: @training_tfnet_model_TFNetModel_construct_30:CNode_121{[0]: ValueNode<Primitive> Depend, [1]: CNode_119, [2]: CNode_103}
#  31: @training_tfnet_model_TFNetModel_construct_30:CNode_135{[0]: ValueNode<Primitive> Return, [1]: CNode_121}


subgraph attr:
subgraph instance: _tuple_getitem_by_number_31 : 000001AE80ADCA90
# In file D:\anaconda\envs\shengteng\Lib\site-packages\mindspore\ops\composite\multitype_ops\getitem_impl.py:127~141/@getitem.register("Tuple", "Int")/
subgraph @_tuple_getitem_by_number_31(%para0_data, %para0_number_index) {
  %0(height) = resolve(NameSpace[SymbolStr: 'Namespace:mindspore.ops.composite.multitype_ops.getitem_impl'], F)
      : (<External, NoShape>, <External, NoShape>) -> (<External, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:80, 8~60/        batch, temp, channel, height, width = seq_data.shape/
  %1(height) = getattr(%0, "tuple_getitem")
      : (<External, NoShape>, <String, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:80, 8~60/        batch, temp, channel, height, width = seq_data.shape/

#------------------------> 6
  %2(height) = %1(%para0_data, %para0_number_index)
      : (<Tuple[Int64*3], TupleShape(NoShape, NoShape, NoShape)>, <Int64, NoShape>) -> (<null>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:80, 8~60/        batch, temp, channel, height, width = seq_data.shape/
  Return(%2)
      : (<null>)
      #scope: (Default)
      # In file D:\shengteng\training\tfnet_model.py:80, 8~60/        batch, temp, channel, height, width = seq_data.shape/
}
# Order:
#   1: @_tuple_getitem_by_number_31:height{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:mindspore.ops.composite.multitype_ops.getitem_impl', [2]: ValueNode<Symbol> F}
#   2: @_tuple_getitem_by_number_31:height{[0]: ValueNode<Primitive> getattr, [1]: height, [2]: ValueNode<StringImm> tuple_getitem}
#   3: @_tuple_getitem_by_number_136:CNode_137{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> MakeTuple}
#   4: @_tuple_getitem_by_number_31:height{[0]: height, [1]: param_data, [2]: param_number_index}
#   5: @_tuple_getitem_by_number_31:height{[0]: ValueNode<Primitive> Return, [1]: height}


# ===============================================================================================
# The total of function graphs in evaluation stack: 7/9 (Ignored 2 internal frames).
# ===============================================================================================


# ===============================================================================================
# The rest function graphs are the following:
# ===============================================================================================
No more function graphs.

